#!/usr/bin/env node
var fs = require('fs'),
    rc = require('rc'),
    ini = require('ini'),
    extend = require('gextend'),
    join = require('path').join;


/****************************************
* LOAD CONFI
****************************************/
var config = rc('envset', {
    filename: './.envset',
    names: ['development', 'production', 'staging', 'test', 'local']
});

/****************************************
* GET ENV NAME AND COMMAND
****************************************/
var argv = process.argv.concat();
var envName = argv[2];
var cmd = argv.splice(3);


//If it's not a supported environment exit
if(config.environments.names.indexOf(envName) === -1){
    console.error('The envs.ini file does not contain a %s entry.', envName);
    process.exit(1);
}

/****************************************
* LOAD ENVIRONMENT
****************************************/
var envs = ini.parse(fs.readFileSync(config.filename, 'utf-8'));

//extract global ENVS from envs.ini
var globals = Object.keys(envs).reduce(function(out, key){
    if(config.environments.names.indexOf(key) !== -1) return out;
    out[key] = envs[key];
    return out;
}, {});


/****************************************
* EXTEND ENVIRONMENT
****************************************/
var _env = extend({}, process.env, globals, envs[envName]);

/****************************************
* EXECUTE ORIGINAL COMMAND
****************************************/
var exec = require('child_process').spawn;
exec(process.execPath.toString(),
cmd,
{
    stdio: 'inherit',
    // detached: true,
    env: _env
});
