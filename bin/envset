#!/usr/bin/env node
var fs = require('fs'),
    rc = require('rc'),
    ini = require('ini'),
    extend = require('gextend'),
    join = require('path').join,
    pkg = require('../package.json'),
    updateNotifier = require('update-notifier');

updateNotifier({pkg: pkg}).notify();

/****************************************
* LOAD CONFIG
****************************************/
var config = rc('envset', {
    filename: './.envset',
    names: ['development', 'production', 'staging', 'test', 'local']
});

/****************************************
* GET ENV NAME AND COMMAND
****************************************/
var argv = process.argv.concat();

//Show help:
if(argv.length === 2){
    console.log('');
    console.log('envset: Load environment variables in session before');
    console.log('        executing your program.');
    console.log('');
    console.log('version:', pkg.version);
    console.log('');
    console.log('Accepted environment names are:');
    config.environments.names.map(function(name){
        console.log(' -', name);
    });
    console.log('');
    process.exit(0);
}

var envName = argv[2];
var cmd = argv[3];
var args = argv.splice(4);

//If it's not a supported environment exit
if(config.environments.names.indexOf(envName) === -1){
    console.error('The envs.ini file does not contain a %s entry.', envName);
    process.exit(1);
}

/****************************************
* LOAD ENVIRONMENT
****************************************/
var envs = ini.parse(fs.readFileSync(config.filename, 'utf-8'));

//extract global ENVS from envs.ini
var globals = Object.keys(envs).reduce(function(out, key){
    if(config.environments.names.indexOf(key) !== -1) return out;
    out[key] = envs[key];
    return out;
}, {});

//TODO: Make plugins for this.
//We create an environmental variable holding the current
//environment name, ie NODE_ENV=development
if(globals.hasOwnProperty('exportEnvironment')){
    var exportEnvironment = globals['exportEnvironment'];
    envs[envName][exportEnvironment] = envName;
}


/****************************************
* EXTEND ENVIRONMENT
****************************************/
var _env = extend({}, process.env, globals, envs[envName]);

/****************************************
* EXECUTE ORIGINAL COMMAND
****************************************/
var exec = require('child_process').spawn;
exec(cmd, args, {
    // detached: true,
    stdio: 'inherit',
    env: _env
});
